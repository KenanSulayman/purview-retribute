package org.purview.core.analysis

import org.purview.core.analysis.settings.Setting
import org.purview.core.report.ReportEntry
import org.purview.core.session.AnalysisStats
import scala.util.DynamicVariable

object Analyser {
  private[core] val statsVar = new DynamicVariable[AnalysisStats](new AnalysisStats)

  /**
   * Runtime statistics for analysers to use
   * @returns The stacked thread-local statistics module
   */
  def statistics = statsVar.value
}

/**
 * An object that processes something and generates a report.
 */
abstract class Analyser[A] extends NotNull {
  import Analyser.statsVar
  
  /**
   * Runs this Analyser and generates a report
   * @param what That which should be analysed
   * @returns The report generated by this analyser
   */
  def analyse(what: A): Set[ReportEntry]

  /**
   * Runs this Analyser with the specified statistics module
   * @param what That which the analyser should analyser
   * @param s The statistics module to use
   * @returns The report generated by this analyser
   */
  def analyseWithStats(what: A)(implicit s: AnalysisStats) = statsVar.withValue(s) {
    analyse(what)
  }

  /**
   * Reports this analysers current status
   * @param status The status to report
   */
  protected def status(status: String) = Analyser.statistics.reportStatus(status)

  /**
   * Reports this analysers current progress.
   * @param progress The progress to report. Must be a number between 0 and 1.
   */
  protected def progress(progress: Float) = Analyser.statistics.reportProgress(progress)
}

/**
 * Adds metadata information to an object, like for instance an Analyser.
 */
trait Metadata {
  /** The name of this object */
  def name: String

  /** The description of this object */
  def description: String

  /** This object's version */
  def version: String = ""

  /** The creator of this object */
  def author: String = ""
}

/**
 * Adds modifyable settings to an object, like for instance an analyser.
 */
trait Settings {
  /** The sequence of settings that this object provides */
  val settings: Seq[Setting[_]]
}